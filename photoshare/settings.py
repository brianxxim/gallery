"""
Django settings for photoshare project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'm-un_db=x5c@_6f%%ngz=4_$x%jqohc71$*yg2=8_5%4p&hh#('

# SECURITY WARNING: don't run with debug turned on in production!
ENV_DEBUG = os.environ.get('DJANGO_DEBUG')
DEBUG = False if ENV_DEBUG == 'False' or ENV_DEBUG == 'false' else True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'photos.apps.PhotosConfig',

    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'photoshare.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'photoshare.utils.global_variable'
            ],
        },
    },
]

WSGI_APPLICATION = 'photoshare.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': 'mysqlbrianblog.mysql.database.azure.com',
        'PORT': 3306,
        'USER': 'root',
        'PASSWORD': 'js#J0Pv$NL',
        'NAME': 'gallery',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'
#
# TIME_ZONE = 'UTC'
LANGUAGE_CODE = 'zh-hans'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
# 静态文件前缀
STATIC_URL = '/static/'
# MEDIA_URL = '/images/'
# 静态文件位置
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

# MEDIA_ROOT = BASE_DIR / 'static/images'
# python manage.py collectstatic时存储的位置
# STATIC_ROOT = BASE_DIR / 'staticfiles'
STATIC_ROOT = os.path.join(STATICFILES_DIRS[0], 'staticfiles')

PUBLIC_USER_USERNAME = 'public'
PUBLIC_USER_PASSWORD = 'oTaf$HLo0B'

LINK_ABOUT_ME = 'https://itcheng.brianblog.asia/'
LINK_MY_BLOG = 'https://brianblog.asia/'

CACHES = {
    # 内存缓存
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    },
}
# 指定SESSION缓存模式 - 使用缓存
SESSION_ENGINE = "django.contrib.sessions.backends.cache"

# 七牛云存储前缀
# QINIU_STORAGE_PREFIX = 'https://galleryimage.brianblog.asia/'
QINIU_STORAGE_PREFIX = 'https://image.brianblog.asia/'
# 自定义存储系统
DEFAULT_FILE_STORAGE = 'photoshare.utils.FileStorage'

# 七牛AK、SK、空间名、上传token过期时间
QINIU_ACCESS_KEY = 'zt7yhFP-rNx4WPQqzk1Ww5KDQibIoRomOKAbgO38'
QINIU_SECRET_KEY = 'qZ-N2mGgmfwkNqzvQfQQsxFhtErnU5acpxjF-w9e'
QINIU_BUCKET_NAME = 'gallery2'
QINIU_TOKEN_EXISTS = 3600

# 默认图片压缩比例
DEFAULT_COMPRESS_IMG_PROPORTION = 0.2
# 图片压缩比例 {X: Y} 图片大于Xmb比例为Y
COMPRESS_IMG_PROPORTION = {
    0: 1,  # 0~1的压缩比例为0
    0.6: 0.6,
    1: 0.5,
    2: 0.25,
    4: 0.125,
    10: 0.01,
    20: 0.0000000001,
}


# 自定义上传系统
FILE_UPLOAD_HANDLERS = [
    # 'django.core.files.uploadhandler.MemoryFileUploadHandler',
    # 'django.core.files.uploadhandler.TemporaryFileUploadHandler',
    'photoshare.utils.ImageUploadHandler'
]
# 文件上传最大长度(字节)
FILE_UPLOAD_MAX_SIZE = 10 * 1024 * 1024

# HEIC图片转换的目标格式
HEIC_CONVERT_FORMAT = 'jpeg'
# 缩略图后缀
THUMBANIL_SUFFIX = '_thumbnail'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    # 过滤器
    "filters": {
        # DEBUG 为 False 时，该过滤器才会传递记录
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        # DEBUG 为 True 时，该过滤器才会传递记录
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },

    # 格式化工具
    'formatters': {
        'verbose': {
            'format': '%(levelname)s: [%(asctime)s]  '
                      '%(pathname)s, line %(lineno)d, in %(funcName)s \n  "%(message)s"'
        },
    },

    # 处理器
    'handlers': {
        # 控制台
        'console': {
            'level': 'INFO',
            # 'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },

        # 文件
        'file': {
            'level': 'WARNING',
            # 'filters': ['require_debug_false'],
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(os.path.join(BASE_DIR, 'logs'), 'photo.log'),
            'maxBytes': 300 * 1024 * 1024,
            'backupCount': 3,
            'formatter': 'verbose'
        },
    },

    # 日志器
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'propagate': True,
            'level': 'INFO',
        },
    }
}


# 开发环境配置
if DEBUG:
    MIDDLEWARE.remove('django.middleware.csrf.CsrfViewMiddleware')
